/**

 */
// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by ainglegen, version 1.10.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace AIngle.Test.Specific
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using AIngle;
	using AIngle.Specific;
	
	public partial class EmbeddedGenericRecordUser : ISpecificRecord
	{
		public static Schema _SCHEMA = AIngle.Schema.Parse("{\"type\":\"record\",\"name\":\"EmbeddedGenericRecordUser\",\"namespace\":\"AIngle.Test.Specif" +
				"ic\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"}]}");
		private string _name;
		public virtual Schema Schema
		{
			get
			{
				return EmbeddedGenericRecordUser._SCHEMA;
			}
		}
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				this._name = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.name;
			default: throw new AIngleRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.name = (System.String)fieldValue; break;
			default: throw new AIngleRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
